const f=(e,s)=>{const n=e.toLowerCase(),o=s.toLowerCase(),a=[];let l=0,r=0;const u=(t,p=!1)=>{let c="";r===0?c=t.length>20?`… ${t.slice(-20)}`:t:p?c=t.length+r>100?`${t.slice(0,100-r)}… `:t:c=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,c&&a.push(c),r+=c.length,p||(a.push(["strong",s]),r+=s.length,r>=100&&a.push(" …"))};let i=n.indexOf(o,l);if(i===-1)return null;for(;i>=0;){const t=i+o.length;if(u(e.slice(l,i)),l=t,r>100)break;i=n.indexOf(o,l)}return r<100&&u(e.slice(l),!0),a};function $(e){return e}const h=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},d="__vueuse_ssr_handlers__";h[d]=h[d]||{};var g;(function(e){e.UP="UP",e.RIGHT="RIGHT",e.DOWN="DOWN",e.LEFT="LEFT",e.NONE="NONE"})(g||(g={}));var m=Object.defineProperty,y=Object.getOwnPropertySymbols,C=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,I=(e,s,n)=>s in e?m(e,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[s]=n,N=(e,s)=>{for(var n in s||(s={}))C.call(s,n)&&I(e,n,s[n]);if(y)for(var n of y(s))w.call(s,n)&&I(e,n,s[n]);return e};const Q={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};N({linear:$},Q);const b=Object.entries,v=Object.keys,E=e=>e.reduce((s,{type:n})=>s+(n==="title"?50:n==="heading"?20:n==="custom"?10:1),0),_=(e,s)=>{var n;const o={};for(const[a,l]of b(s)){const r=((n=s[a.replace(/\/[^\\]*$/,"")])==null?void 0:n.title)||"",u=`${r?`${r} > `:""}${l.title}`,i=f(l.title,e);i&&(o[u]=[...o[u]||[],{type:"title",path:a,display:i}]),l.customFields&&b(l.customFields).forEach(([t,p])=>{p.forEach(c=>{const O=f(c,e);O&&(o[u]=[...o[u]||[],{type:"custom",path:a,index:t,display:O}])})});for(const t of l.contents){const p=f(t.header,e);p&&(o[u]=[...o[u]||[],{type:"heading",path:a+(t.slug?`#${t.slug}`:""),display:p}]);for(const c of t.contents){const O=f(c,e);O&&(o[u]=[...o[u]||[],{type:"content",header:t.header,path:a+(t.slug?`#${t.slug}`:""),display:O}])}}}return v(o).sort((a,l)=>E(o[a])-E(o[l])).map(a=>({title:a,contents:o[a]}))},P=JSON.parse("{\"/\":{\"/intro.html\":{\"title\":\"Intro Page\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Place your introduction and profile here.\"]}]},\"/slides.html\":{\"title\":\"Slide page\",\"contents\":[]},\"/work/token/%E5%93%A5%E4%BB%AC%E4%B8%8D%E5%81%A5%E5%BF%98.html\":{\"title\":\"总是记不住东西怎么办？只能这样了！\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"GITHUB 相关\",\"GITHUB 相关\"]}],\"customFields\":{\"0\":[\"HTML\"],\"1\":[\"工作\",\"随笔\"]}},\"/work/documents/blog/PicGOGITHUB%E5%9B%BE%E5%BA%8A.html\":{\"title\":\"10分钟用PicGO+Github+VScode搭建自己的便捷图床\",\"contents\":[{\"header\":\"1.PicGO 下载\",\"slug\":\"_1-picgo-下载\",\"contents\":[]},{\"header\":\"应用概述\",\"slug\":\"应用概述\",\"contents\":[\"PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具\",\"PicGo 本体支持如下图床：\",\"七牛图床 v1.0\",\"腾讯云 COS v4\\\\v5 版本 v1.1 & v1.5.0\",\"又拍云 v1.2.0\",\"GitHub v1.5.0\",\"SM.MS V2 v2.3.0-beta.0\",\"阿里云 OSS v1.6.0\",\"Imgur v1.6.0\"]},{\"header\":\"特色功能\",\"slug\":\"特色功能\",\"contents\":[\"支持拖拽图片上传\",\"支持快捷键上传剪贴板里第一张图片\",\"Windows 和 macOS 支持右键图片文件通过菜单上传\",\"上传图片后自动复制链接到剪贴板\",\"支持自定义复制到剪贴板的链接格式\",\"支持修改快捷键，默认快速上传快捷键：command+shift+p（macOS）| control+shift+p（Windows\\\\Linux)\",\"支持插件系统，已有插件支持 Gitee、青云等第三方图床 \",\"更多第三方插件以及使用了 PicGo 底层的应用可以在 Awesome-PicGo (opens new window) 找到。欢迎贡献！\",\"支持通过发送 HTTP 请求调用 PicGo 上传\"]}],\"customFields\":{\"0\":[\"VSCODE\",\"GITHUB\"],\"1\":[\"工作\",\"随笔\"]}},\"/work/documents/blog/VSCODE%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html\":{\"title\":\"拒绝重复代码，高效摸鱼！！\",\"contents\":[],\"customFields\":{\"0\":[\"VSCODE\"],\"1\":[\"工作\",\"随笔\"]}},\"/work/documents/blog/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE.html\":{\"title\":\"Vuepress-theme-hope主题Giscus评论系统设置\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Giscus 是由由GitHub Discussions 驱动的评论系统。\",\"开源。\",\"无跟踪，无广告，永久免费。\",\"无需数据库。全部数据均储存在 GitHub Discussions 中。\",\"支持自定义主题！\",\"支持多种语言。\",\"高度可配置。\",\"自动从 GitHub 拉取新评论与编辑。\",\"可自建服务！\",\"具体操作如下所示：\"]},{\"header\":\"1、创建新仓库\",\"slug\":\"_1、创建新仓库\",\"contents\":[]},{\"header\":\"2、安装 giscus\",\"slug\":\"_2、安装-giscus\",\"contents\":[\"点击这个链接安装：GitHub Apps - giscus\",\"选择刚建立的仓库，点击 install\"]},{\"header\":\"3、配置仓库 Discussions 部分\",\"slug\":\"_3、配置仓库-discussions-部分\",\"contents\":[\"首先打开仓库的 Settings，向👇滑页面，找到Features, 将 Discussions 部分打上✅\"]},{\"header\":\"4、前往 Giscus 页面 获得设置\",\"slug\":\"_4、前往-giscus-页面-获得设置\",\"contents\":[\"点击这个链接进入 Giscus 配置页面👉 GitHub Apps - giscus\",\"配置完上述部分后，可以在启动 giscus 下边获取 data-repo, data-repo-id, data-category 和 data-category-id 这四个属性。\",\"在Vuepress-theme-hope主题配置文件中配置 provider: \\\"Giscus\\\" 并将 data-repo, data-repo-id, data-category 和 data-category-id 作为插件选项传入 repo, repoId, categorycategoryId。\"]},{\"header\":\"5、大功告成\",\"slug\":\"_5、大功告成\",\"contents\":[\"博客文章部分就有了下边的评论区👇👇👇\"]}],\"customFields\":{\"0\":[\"GITHUB\"],\"1\":[\"工作\",\"随笔\"]}},\"/work/skills/git/GIT%E5%A4%9A%E8%B4%A6%E5%8F%B7%E7%AE%A1%E7%90%86.html\":{\"title\":\"本地 git 账号关联远程 github/gitlab | git 本地如何配置多平台账号\",\"contents\":[{\"header\":\"一、问题产生背景\",\"slug\":\"一、问题产生背景\",\"contents\":[\"工作用的公司 gitlab 账号，自己平常学习用的 github 账号，又只有一个电脑，公司账号当然不能用于 github，所以需要分别配置两套密钥，分别用于自己搞事情研究和公司搬砖使用。\"]},{\"header\":\"二、本地 git 账号关联远程 github ｜ gitlab\",\"slug\":\"二、本地-git-账号关联远程-github-gitlab\",\"contents\":[\"我们必须将本地账号关联了远程账户，才能把本地代码提交到远程仓库上。\",\"道理都一样，我们以 GitHub 为例：\",\"1、本地创建 ssh-key\",\"首先，进入 .ssh 目录下\",\"接着，创建 ssh-key，xxxxx@163.com 注意替换成你自己的邮箱账号\",\"一路回车执行完上述命令后，这时会在本地的 .ssh 目录创建两个文件：\",\"2、把 id_rsa_github.pub 文件的内容复制到远程 github 上 👇\",\"点击这个链接配置 github keys：GitHub Settings - Keys\",\"3、测试拉取项目\",\"未配置多账号\",\" 我们现在有多个 id_rsa 文件，github 拉取时不知道使用哪一个 需要配置上对应的策略👉策略配置\"]},{\"header\":\"三、git 本地配置多平台账号\",\"slug\":\"三、git-本地配置多平台账号\",\"contents\":[\"我们刚刚创建 ssh-key（ xxxxx@163.com 注意替换成你自己的邮箱账号）的时候，生成了两个id_rsa_github文件，这样只能适用于一个账号多个平台，不能用于多个账号。\",\"紧接着，那我们就再生成一套新的密钥，起一个不同的名字，然后通过配置来区分 github 用我们这套新的账号配置，公司 gitlab 用我们刚刚第二步骤里生成的那套账号配置，不就可以了嘛！\",\"说干就干，还是第一步，先进入到 .ssh 目录：\",\"再次执行下面命令（这次换成你的另一个账号）\",\"敲回车之后，修改密钥的名称，起一个不同的名字，如下图所示👇。\",\"好了，这样我们就配置了两个账号的密钥，一个用来链接公司的 gitlab，一个用来折腾自己的 GitHub。\"]},{\"header\":\"四、配置秘钥使用策略\",\"slug\":\"四、配置秘钥使用策略\",\"contents\":[\"话又说回来了\",\"还有个问题，怎么知道你提交远程仓库的时候，用哪个秘钥呢？\",\"我们还需要写个配置文件，当提交到公司的远程仓库 http://xxx.github.com 的时候，我们用账号 A，提交自己的 http://xxx.gitlab.com 的时候，用账号 B。\",\"在 .ssh 目录新建 config 文件：\",\"执行命令： vi config ，敲下键盘的 i 键，切换至输入状态。\",\"输入以下代码，注意改成你自己的账号，文件名字\",\"依次按下 esc 、 : ，输入 wq ，敲下回车，保存文件。\",\"然后就可以顺利的进行多账号多个远程仓库的使用啦~\"]},{\"header\":\"五、测试一把\",\"slug\":\"五、测试一把\",\"contents\":[\"github 拉取项目✅\",\"gitlab 拉取项目✅\"]}],\"customFields\":{\"0\":[\"GIT\",\"GITHUB\"],\"1\":[\"工作\",\"随笔\"]}},\"/work/token/\":{\"title\":\"Token\",\"contents\":[]},\"/work/\":{\"title\":\"Work\",\"contents\":[]},\"/work/documents/blog/\":{\"title\":\"Blog\",\"contents\":[]},\"/work/documents/\":{\"title\":\"Documents\",\"contents\":[]},\"/work/skills/git/\":{\"title\":\"Git\",\"contents\":[]},\"/work/skills/\":{\"title\":\"Skills\",\"contents\":[]}}}");self.onmessage=({data:e})=>{self.postMessage(_(e.query,P[e.routeLocale]))};
//# sourceMappingURL=original.js.map
