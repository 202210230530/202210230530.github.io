import{_ as u,X as p,Y as h,Z as e,$ as n,a1 as s,a4 as a,a5 as o,C as d}from"./framework-b2d10168.js";const b={},m=o(`<h2 id="_1-准备阶段" tabindex="-1"><a class="header-anchor" href="#_1-准备阶段" aria-hidden="true">#</a> 1.准备阶段</h2><h3 id="查看系统信息" tabindex="-1"><a class="header-anchor" href="#查看系统信息" aria-hidden="true">#</a> <strong>查看系统信息</strong></h3><ul><li>查看系统内核版本</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/redhat-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看系统位数</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>getconf WORD_BIT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>先拿到系统信息为后续下载对应系统的安装包做准备<br> 演示使用系统为<strong>CentOS7.9.2009 x86_64</strong></p></div><h3 id="查看安装所需依赖" tabindex="-1"><a class="header-anchor" href="#查看安装所需依赖" aria-hidden="true">#</a> <strong>查看安装所需依赖</strong></h3><p>通过官网离线安装的示例（👇下图为官网截图）可以看出，需要的依赖包括：<strong>openssl、pcre、zlib</strong><br> 依赖安装编译需要<strong>gcc 环境</strong><br><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230506171411.png" alt="" loading="lazy"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>先查看当前系统是否存在上面的环境,若存在则可以考虑不重复安装<br> 若显示结果中有环境的版本信息，则表示环境已经安装，若没显示则没有安装</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> gcc 环境 执行命令<code>gcc -v</code>和<code>g++ -v</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> openssl 环境 执行命令<code>openssl version</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> pcre 环境 执行命令<code>pcre-config --version</code></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> zlib 环境 执行命令<code>yum list installed | grep zlib</code></label></li></ul></div><h3 id="准备安装所需依赖-离线安装使用" tabindex="-1"><a class="header-anchor" href="#准备安装所需依赖-离线安装使用" aria-hidden="true">#</a> <strong>准备安装所需依赖（离线安装使用）</strong></h3><p><strong>1.</strong> （<strong>如果已经安装 gcc ，忽略此步骤</strong>）在 CentOS 7 的安装镜像，packages 目录，找到安装 gcc 相关的 rpm 包，并放到一个文件夹里（1），列表如下（<em>注意：不同版本的操作系统，对应的 rpm 版本也不同</em>）</p>`,12),g={href:"http://mirror.centos.org/centos/7.9.2009/os/x86_64/Packages/",target:"_blank",rel:"noopener noreferrer"},v=e("strong",null,"CTRL+F 搜索关键字快速定位",-1),_=o("<table><thead><tr><th>序号</th><th>安装包</th></tr></thead><tbody><tr><td>1</td><td>cpp-4.8.5-44.el7.x86_64.rpm</td></tr><tr><td>2</td><td>gcc-4.8.5-44.el7.x86_64.rpm</td></tr><tr><td>3</td><td>glibc-2.17-317.el7.x86_64.rpm</td></tr><tr><td>4</td><td>glibc-common-2.17-317.el7.x86_64.rpm</td></tr><tr><td>5</td><td>glibc-devel-2.17-317.el7.x86_64.rpm</td></tr><tr><td>6</td><td>glibc-headers-2.17-317.el7.x86_64.rpm</td></tr><tr><td>7</td><td>kernel-headers-3.10.0-1160.el7.x86_64.rpm</td></tr><tr><td>8</td><td>libmpc-1.0.1-3.el7.x86_64.rpm</td></tr><tr><td>9</td><td>mpfr-3.1.1-4.el7.x86_64.rpm</td></tr></tbody></table>",1),k=e("strong",null,"2.",-1),x=e("strong",null,"如果已经安装 gcc-c++ ，忽略此步骤",-1),f=e("em",null,"注意：不同版本的操作系统，对应的 rpm 版本也不同",-1),z=e("br",null,null,-1),y={href:"http://mirror.centos.org/centos/7.9.2009/os/x86_64/Packages/",target:"_blank",rel:"noopener noreferrer"},w=e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"序号"),e("th",null,"安装包")])]),e("tbody",null,[e("tr",null,[e("td",null,"1"),e("td",null,"gcc-c++-4.8.5-44.el7.x86_64.rpm")]),e("tr",null,[e("td",null,"2"),e("td",null,"libstdc++-devel-4.8.5-44.el7.x86_64.rpm")])])],-1),N=e("strong",null,"3.",-1),A=e("strong",null,"如果已经安装对应依赖 ，可考虑忽略此步骤",-1),O=e("br",null,null,-1),C={href:"https://www.openssl.org/source/openssl-1.1.0e.tar.gz",target:"_blank",rel:"noopener noreferrer"},S=e("br",null,null,-1),P={href:"https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz/download",target:"_blank",rel:"noopener noreferrer"},T=e("br",null,null,-1),E={href:"https://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz/download",target:"_blank",rel:"noopener noreferrer"},I=e("strong",null,"4.",-1),V=e("br",null,null,-1),B={href:"http://nginx.org/download/nginx-1.18.0.tar.gz",target:"_blank",rel:"noopener noreferrer"},H={class:"hint-container tip"},L=e("p",{class:"hint-container-title"},"哥们是好人",-1),X=e("br",null,null,-1),Y={href:"https://pan.baidu.com/s/1Y2Y3JOJSpfdg289D2tVEug?pwd=zzxm",target:"_blank",rel:"noopener noreferrer"},$=o('<h2 id="_2-安装阶段" tabindex="-1"><a class="header-anchor" href="#_2-安装阶段" aria-hidden="true">#</a> 2.安装阶段</h2><div class="hint-container tip"><p class="hint-container-title">安装步骤</p><p>1、安装依赖：gcc、gcc-c++、ssl、pcre、zlib。<strong>注意：一定要先安装 gcc，再安装 gcc-c++。然后再安装其他，其他的没有先后顺序。</strong><br> 2、安装 Nginx。</p></div><h3 id="_1-安装-gcc-如果已经安装-gcc-忽略此步骤" tabindex="-1"><a class="header-anchor" href="#_1-安装-gcc-如果已经安装-gcc-忽略此步骤" aria-hidden="true">#</a> 1.安装 gcc （如果已经安装 gcc ，忽略此步骤）</h3>',3),j=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("yum "),e("span",{class:"token function"},"install"),n(` gcc-c++
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),D=e("p",null,"先进入到文件夹 1",-1),G=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"rpm"),n(),e("span",{class:"token parameter variable"},"-Uvh"),n(" *.rpm "),e("span",{class:"token parameter variable"},"--nodeps"),n(),e("span",{class:"token parameter variable"},"--force"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),J=e("p",null,"进入到文件夹 2",-1),M=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"rpm"),n(),e("span",{class:"token parameter variable"},"-Uvh"),n(" *.rpm "),e("span",{class:"token parameter variable"},"--nodeps"),n(),e("span",{class:"token parameter variable"},"--force"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),R=e("h3",{id:"_2-安装-pcre-如果已经安装-pcre-可以考虑忽略此步骤",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-安装-pcre-如果已经安装-pcre-可以考虑忽略此步骤","aria-hidden":"true"},"#"),n(" 2.安装 pcre （如果已经安装 pcre ，可以考虑忽略此步骤）")],-1),U=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("yum "),e("span",{class:"token function"},"install"),n(),e("span",{class:"token parameter variable"},"-y"),n(` pcre pcre-devel
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Z=e("p",null,"进入到文件夹 3",-1),q=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"tar"),n(),e("span",{class:"token parameter variable"},"-zxvf"),n(" pcre-8.45.tar.gz "),e("span",{class:"token comment"},"##解压pcre"),n(`
`),e("span",{class:"token builtin class-name"},"cd"),n(` pcre-8.45/
./configure `),e("span",{class:"token comment"},"##配置"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token comment"},"##构建"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n(),e("span",{class:"token comment"},"##安装"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),F=e("h3",{id:"_3-安装-zlib-如果已经安装-zlib-可以考虑忽略此步骤",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-安装-zlib-如果已经安装-zlib-可以考虑忽略此步骤","aria-hidden":"true"},"#"),n(" 3.安装 zlib （如果已经安装 zlib ，可以考虑忽略此步骤）")],-1),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("yum "),e("span",{class:"token function"},"install"),n(),e("span",{class:"token parameter variable"},"-y"),n(` zlib zlib-devel
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),K=e("p",null,"进入到文件夹 3",-1),Q=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"tar"),n(),e("span",{class:"token parameter variable"},"-zxvf"),n(" zlib-1.2.11.tar.gz "),e("span",{class:"token comment"},"# 解压zlib"),n(`
`),e("span",{class:"token builtin class-name"},"cd"),n(` zlib-1.2.11/
./configure `),e("span",{class:"token comment"},"# 配置"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token comment"},"# 构建"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n(),e("span",{class:"token comment"},"# 安装"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ee=e("h3",{id:"_4-安装-openssl-如果已经安装-openssl-可以考虑忽略此步骤",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-安装-openssl-如果已经安装-openssl-可以考虑忽略此步骤","aria-hidden":"true"},"#"),n(" 4.安装 openssl （如果已经安装 openssl ，可以考虑忽略此步骤）")],-1),ne=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("yum "),e("span",{class:"token function"},"install"),n(),e("span",{class:"token parameter variable"},"-y"),n(` openssl openssl-devel
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),se=e("p",null,"进入到文件夹 3",-1),ae=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"tar"),n(),e("span",{class:"token parameter variable"},"-zxvf"),n(" openssl-1.1.0e.tar.gz "),e("span",{class:"token comment"},"# 解压openssl"),n(`
`),e("span",{class:"token builtin class-name"},"cd"),n(` openssl-1.1.0e/
./config `),e("span",{class:"token comment"},"# 配置"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token comment"},"# 构建"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n(),e("span",{class:"token comment"},"# 安装"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),te=e("h3",{id:"_5-安装-nginx",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-安装-nginx","aria-hidden":"true"},"#"),n(" 5.安装 nginx")],-1),le=e("p",null,[e("strong",null,"下载 nginx 安装包")],-1),ie=e("p",null,[n("例：下载至"),e("code",null,"~/"),n("文件夹下")],-1),ce=e("p",null,[e("code",null,"wget http://nginx.org/download/nginx-1.22.1.tar.gz")],-1),re=e("p",null,[n("下载完成后，解压："),e("code",null,"tar -xvf nginx-1.22.1.tar.gz")],-1),oe=e("p",null,[e("strong",null,"配置安装")],-1),de=e("p",null,[n("进入解压目录并配置安装地址"),e("code",null,"/usr/local/nginx"),n("，命令如下")],-1),ue=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"cd"),n(` ~/nginx-1.22.1
​
./configure `),e("span",{class:"token parameter variable"},"--prefix"),e("span",{class:"token operator"},"="),n("/usr/local/nginx   "),e("span",{class:"token comment"},"# 配置"),n(`
`),e("span",{class:"token function"},"make"),n("    "),e("span",{class:"token comment"},"# 编译"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n("    "),e("span",{class:"token comment"},"# 安装"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),pe=e("p",null,"进入到文件夹 4",-1),he=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"tar"),n(),e("span",{class:"token parameter variable"},"-zxvf"),n(` nginx-1.18.0.tar.gz
`),e("span",{class:"token builtin class-name"},"cd"),n(` nginx-1.18.0/
./configure `),e("span",{class:"token parameter variable"},"--prefix"),e("span",{class:"token operator"},"="),n("/usr/local/nginx --with-http_ssl_module --with-pcre"),e("span",{class:"token operator"},"="),e("span",{class:"token punctuation"},".."),n("/"),e("span",{class:"token punctuation"},".."),n("/3/pcre-8.45 --with-zlib"),e("span",{class:"token operator"},"="),e("span",{class:"token punctuation"},".."),n("/"),e("span",{class:"token punctuation"},".."),n("/3/zlib-1.2.11 --with-openssl"),e("span",{class:"token operator"},"="),e("span",{class:"token punctuation"},".."),n("/"),e("span",{class:"token punctuation"},".."),n(`/3/openssl-1.1.0e
`),e("span",{class:"token function"},"make"),n(`
`),e("span",{class:"token function"},"make"),n(),e("span",{class:"token function"},"install"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),be=o(`<h3 id="_6-测试-nginx" tabindex="-1"><a class="header-anchor" href="#_6-测试-nginx" aria-hidden="true">#</a> 6.测试 nginx</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/nginx/sbin/
./nginx <span class="token parameter variable">-t</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>出现如下文字即安装成功👇</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-nginx-相关配置" tabindex="-1"><a class="header-anchor" href="#_3-nginx-相关配置" aria-hidden="true">#</a> 3.Nginx 相关配置</h2><h3 id="设置全局-nginx-环境变量" tabindex="-1"><a class="header-anchor" href="#设置全局-nginx-环境变量" aria-hidden="true">#</a> 设置全局 nginx 环境变量</h3><p><strong>1.编辑 profile 文件</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vi</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.添加核心代码</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">NGINX_HOME</span><span class="token operator">=</span>/usr/local/nginx
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$NGINX_HOME</span>/sbin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.保存退出</strong></p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code><span class="token symbol">:wq</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4.重载 profile 文件</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>5.验证是否成功</strong></p><div class="language-auto line-numbers-mode" data-ext="auto"><pre class="language-auto"><code>nginx -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="nginx-相关常用命令" tabindex="-1"><a class="header-anchor" href="#nginx-相关常用命令" aria-hidden="true">#</a> nginx 相关常用命令</h3>`,17);function me(ge,ve){const c=d("ExternalLinkIcon"),r=d("Tabs");return p(),h("div",null,[m,e("p",null,[n("👉"),e("a",g,[n("CentOS 7.9.2009 Packages 下载"),s(c)]),n(),v]),_,e("p",null,[k,n(" （"),x,n("）在 CentOS 7 的安装镜像，packages 目录，找到安装 gcc-c++ 相关的 rpm 包，并放到一个文件夹里（2），列表如下（"),f,n("）"),z,n(" 👉"),e("a",y,[n("CentOS 7.9.2009 Packages 下载"),s(c)])]),w,e("p",null,[N,n(" （"),A,n("）下载 Nginx 需要依赖的离线安装包，放到一个文件夹里（3）"),O,n(" 👉"),e("a",C,[n("OpenSSL 安装包下载"),s(c)]),S,n(" 👉"),e("a",P,[n("Pcre 安装包下载"),s(c)]),T,n(" 👉"),e("a",E,[n("Zlib 安装包下载"),s(c)])]),e("p",null,[I,n(" 下载 Nginx 离线安装包，放到文件夹 4："),V,n(" 👉"),e("a",B,[n("Nginx 安装包下载"),s(c)])]),e("div",H,[L,e("p",null,[n("如果你的版本跟哥们一样 那么这里有打包好的程序包可以直接使用😄"),X,n(" 👉"),e("a",Y,[n("全部安装包下载"),s(c)])])]),$,s(r,{id:"210",data:[{title:"在线安装"},{title:"离线安装"}]},{tab0:a(({title:t,value:l,isActive:i})=>[j]),tab1:a(({title:t,value:l,isActive:i})=>[D,G,J,M]),_:1}),R,s(r,{id:"228",data:[{title:"在线安装"},{title:"离线安装"}]},{tab0:a(({title:t,value:l,isActive:i})=>[U]),tab1:a(({title:t,value:l,isActive:i})=>[Z,q]),_:1}),F,s(r,{id:"242",data:[{title:"在线安装"},{title:"离线安装"}]},{tab0:a(({title:t,value:l,isActive:i})=>[W]),tab1:a(({title:t,value:l,isActive:i})=>[K,Q]),_:1}),ee,s(r,{id:"256",data:[{title:"在线安装"},{title:"离线安装"}]},{tab0:a(({title:t,value:l,isActive:i})=>[ne]),tab1:a(({title:t,value:l,isActive:i})=>[se,ae]),_:1}),te,s(r,{id:"270",data:[{title:"在线安装"},{title:"离线安装"}]},{tab0:a(({title:t,value:l,isActive:i})=>[le,ie,ce,re,oe,de,ue]),tab1:a(({title:t,value:l,isActive:i})=>[pe,he]),_:1}),be])}const ke=u(b,[["render",me],["__file","Nginx离线安装.html.vue"]]);export{ke as default};
