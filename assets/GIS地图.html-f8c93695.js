import{_ as o,X as c,Y as i,a1 as a,a2 as l,a3 as u,Z as n,$ as s,a4 as k,C as t}from"./framework-0a3b6e76.js";const r={},d=n("h3",{id:"_1-google-地图瓦片下载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-google-地图瓦片下载","aria-hidden":"true"},"#"),s(),n("strong",null,"1.Google 地图瓦片下载")],-1),v=n("p",null,[s("查找了半天地图下载工具，各种花里胡哨还有收费的。哥们一想，这瓦片下载不就是通过接口一点点调用人家地图官方的接口下载吗？我写一个不就完了吗。 于是乎，我兴致勃勃的打开了 IDEA。转念一想，这玩意既然能写，那别人肯定有写好的啊，何必浪费我摸鱼的时间。于是哥们一番搜索找到了一个看似特别不错("),n("strong",null,"使用了，嘎嘎好使，强烈推荐"),s(")的地图瓦片下载器👇👇👇")],-1),m={href:"https://pan.baidu.com/s/1CA7sdH6zL4OjJxVydKwrWQ?pwd=mdve",target:"_blank",rel:"noopener noreferrer"},b=k(`<p>下载安装包后解压文件夹会得到一个<strong>地图下载器</strong>目录，里面文件如下：<br><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509162004.png" alt="" loading="lazy"></p><p>双击<code>run.bat</code>即可启动程序！</p><div class="hint-container warning"><p class="hint-container-title">提示</p><p>若无法打开，请将文件夹改为英文，并注意文件夹所在详细路径是否为<strong>全英文</strong></p></div><figure><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509162314.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到地图下载器提供了友好的交互页面，功能也挺全。 我们要下载 Google 世界地图瓦片,那么需要再选中了 Google 地图瓦片后点击上方的<code>任务-&gt;直接下载世界地图</code></p><p>在下载设置中选择要下载瓦片的层级和下载到的路径<br><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509162743.png" alt="" loading="lazy"></p><p>点击预估下载量可以查看瓦片大概占用多少存储，确认自己的存储空间够用<br><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509163022.png" alt="" loading="lazy"></p><div class="hint-container warning"><p class="hint-container-title">特别提醒</p><p><strong>特别说明 Google 地图下载需要科学上网</strong><br> 如果你需要一个稳定的 VPN 的话，可以看哥们这篇文章👉<a href="">不会科学上网的程序员不是好程序员</a></p></div><p>如果可以科学上网的话，在地图下载上方打开<code>网络-&gt;代理设置</code></p><figure><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509164139.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>开始下载任务</p><figure><img src="https://raw.githubusercontent.com/202210230530/blog-images/master/blog-images/20230509164327.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这样在你的下载目录里就可以看到下载好的瓦片了</p><h3 id="_2-离线瓦片服务搭建" tabindex="-1"><a class="header-anchor" href="#_2-离线瓦片服务搭建" aria-hidden="true">#</a> <strong>2.离线瓦片服务搭建</strong></h3><p><strong>1. 首先要把下载好的瓦片搞到内网服务器上面。</strong> 我需要干啥呢？</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"><strong>把已经下载的文件同步到内网服务器</strong></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"><strong>有新文件接入后自动同步到服务器</strong></label></li></ul><p>咋整呢？写个脚本搞定就成！👍<br> 作为摸🐟老手，自己写脚本岂不是太 <code>low </code>了，这次我们<strong>让<code>ChatGPT</code>为我们打工</strong>写个脚本</p><details class="hint-container details"><summary>GPT 生成脚本</summary><p>Q: 请用 java 实现一个脚本，1.要求自动将 window 指定目录下的文件同步到 linux 服务器上。2.要求监听当前目录，有新文件时自动同步文件 3.脚本参数要求 window 目录可配置、linux 目录可配置</p><p>A: 正在为您搜索：java 实现脚本、window 目录、linux 服务器、文件同步</p><p>很高兴回答您的问题。根据您提供的要求，可以使用 Java 编写一个脚本来同步文件。</p><p>首先，使用 Java 中的 SFTP 库实现将文件从 Windows 同步到 Linux 服务器上。我们可以使用 JSch 库（[1]）来连接 Linux 服务器并上传文件。</p><p>接着，我们需要在 Windows 上监听目录的变化。我们可以使用 Java 标准库中的 WatchService 类实现（[2]）。</p><p>最后，在程序启动时，我们可以读取命令行参数以获取 Windows 和 Linux 目录的路径。这可以使用 Java 中的 Args4j 库（[3]）来实现。</p><p>示例代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>jcraft<span class="token punctuation">.</span>jsch<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kohsuke<span class="token punctuation">.</span>args4j<span class="token punctuation">.</span></span><span class="token class-name">CmdLineException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>kohsuke<span class="token punctuation">.</span>args4j<span class="token punctuation">.</span></span><span class="token class-name">CmdLineParser</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileSync</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">PORT</span> <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">enum</span> <span class="token class-name">OS</span> <span class="token punctuation">{</span>
        <span class="token constant">WINDOWS</span><span class="token punctuation">,</span>
        <span class="token constant">LINUX</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">OS</span> os<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Path</span> windowsPath<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> linuxUser<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> linuxHost<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Path</span> linuxPath<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileSync</span> fileSync <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileSync<span class="token punctuation">.</span><span class="token function">parseArgs</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileSync<span class="token punctuation">.</span><span class="token function">watchDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseArgs</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileSyncOptions</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileSyncOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CmdLineParser</span> parser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CmdLineParser</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            parser<span class="token punctuation">.</span><span class="token function">parseArgument</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CmdLineException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            parser<span class="token punctuation">.</span><span class="token function">printUsage</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        windowsPath <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getWindowsPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        linuxUser <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getLinuxUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        linuxHost <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getLinuxHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        linuxPath <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getLinuxPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Windows&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            os <span class="token operator">=</span> <span class="token constant">OS</span><span class="token punctuation">.</span><span class="token constant">WINDOWS</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            os <span class="token operator">=</span> <span class="token constant">OS</span><span class="token punctuation">.</span><span class="token constant">LINUX</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">watchDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">WatchService</span> watchService <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newWatchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        windowsPath<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>watchService<span class="token punctuation">,</span> <span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token constant">ENTRY_CREATE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">WatchKey</span> key<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                key <span class="token operator">=</span> watchService<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">WatchEvent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> event <span class="token operator">:</span> key<span class="token punctuation">.</span><span class="token function">pollEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Path</span> filePath <span class="token operator">=</span> windowsPath<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token punctuation">)</span> event<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">syncFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            key<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">syncFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> destinationFilePath<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>os <span class="token operator">==</span> <span class="token constant">OS</span><span class="token punctuation">.</span><span class="token constant">WINDOWS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            destinationFilePath <span class="token operator">=</span> <span class="token function">constructRemotePath</span><span class="token punctuation">(</span>linuxPath<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            destinationFilePath <span class="token operator">=</span> linuxPath<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">JSch</span> jsch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ChannelSftp</span> channel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session <span class="token operator">=</span> jsch<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span>linuxUser<span class="token punctuation">,</span> linuxHost<span class="token punctuation">,</span> <span class="token constant">PORT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token string">&quot;StrictHostKeyChecking&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            channel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ChannelSftp</span><span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">openChannel</span><span class="token punctuation">(</span><span class="token string">&quot;sftp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            channel<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            channel<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> destinationFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JSchException</span> <span class="token operator">|</span> <span class="token class-name">SftpException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to sync file: &quot;</span> <span class="token operator">+</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>channel <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                channel<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                session<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">constructRemotePath</span><span class="token punctuation">(</span><span class="token class-name">Path</span> remoteDir<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Path</span> fileName <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> remoteDir<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以使用以下命令行参数来运行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> FileSync --windows-path <span class="token string">&quot;C:\\path<span class="token entity" title="\\t">\\t</span>o\\directory&quot;</span> --linux-user user --linux-host <span class="token function">host</span> --linux-path <span class="token string">&quot;/path/to/directory&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>--windows-path</code>指定 Windows 目录的路径，<code>--linux-user</code>和<code>--linux-host</code>指定 Linux 服务器的登录用户名和主机名，<code>--linux-path</code>指定 Linux 目录的路径。</p><p>希望这能帮到您！</p></details><p>OK! 那我们试一下好不好用！ 不好用，下次再调试！</p><p><strong>2.使用 nginx 代理的方式将这些瓦片做成可以通过 http 链接<code>/offlineMapTiles/{z}/{x}/{y}.png</code>访问的服务</strong></p><p>我的 nginx 配置文件说明</p><h3 id="_3-openlayers3-加载离线-google-地图" tabindex="-1"><a class="header-anchor" href="#_3-openlayers3-加载离线-google-地图" aria-hidden="true">#</a> <strong>3.OpenLayers3 加载离线 Google 地图</strong></h3><h3 id="_4-绘制区域" tabindex="-1"><a class="header-anchor" href="#_4-绘制区域" aria-hidden="true">#</a> <strong>4.绘制区域</strong></h3><h3 id="_5-区域监控" tabindex="-1"><a class="header-anchor" href="#_5-区域监控" aria-hidden="true">#</a> <strong>5.区域监控</strong></h3>`,24);function g(h,f){const p=t("VPCard"),e=t("ExternalLinkIcon");return c(),i("div",null,[d,v,a(p,l(u({title:"地图下载器",desc:"使用Java开发的地图瓦片图下载工具，支持OpenStreetMap、天地图、谷歌地图、高德地图、腾讯地图、必应地图的XYZ瓦片图下载与合并。",logo:"/moyu.png",link:"https://gitee.com/CrimsonHu/java_map_download"})),null,16),n("p",null,[s("为了节约时间，哥们直接下载了打包好的程序包 👉 "),n("a",m,[s("地图下载器程序包 Windows"),a(e)])]),b])}const w=o(r,[["render",g],["__file","GIS地图.html.vue"]]);export{w as default};
