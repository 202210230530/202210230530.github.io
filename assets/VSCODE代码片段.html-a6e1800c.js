import{_ as r,X as d,Y as u,Z as n,$ as s,a1 as i,a2 as t,a5 as k,C as p}from"./framework-3159d9f5.js";const g={},b=k(`<h2 id="一、起步" tabindex="-1"><a class="header-anchor" href="#一、起步" aria-hidden="true">#</a> 一、起步</h2><h3 id="_1-如何设置" tabindex="-1"><a class="header-anchor" href="#_1-如何设置" aria-hidden="true">#</a> 1.如何设置</h3><p>Windows 系统: 文件 &gt; 首选项 &gt; 用户代码片段</p><p>Mac 系统: Code &gt; 首选项 &gt; 用户片段</p><figure><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a3e3e7d90b443ce8410ca683b3b966f~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-选择已有代码片段或创建代码片段-可以对现有的进行修改-也可以新建代码片段" tabindex="-1"><a class="header-anchor" href="#_2-选择已有代码片段或创建代码片段-可以对现有的进行修改-也可以新建代码片段" aria-hidden="true">#</a> 2. 选择已有代码片段或创建代码片段（可以对现有的进行修改，也可以新建代码片段）</h3><p>代码片段分两种：</p><ol><li>全局代码片段（每种语言环境下都能触发代码块）。</li><li>对应语言的局部代码片段（只能在对应语言环境下才能触发），新建全局代码片段会在 <code>snippets</code> 目录下生成 <code>.code-snippets</code> 为后缀的配置文件，而新建对应语言的代码片段会生成 <code>对应语言 + .json</code> 的配置文件。</li></ol><blockquote><p>下图是创建代码块的开始界面：</p></blockquote><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3fe91e83aeaf49c68949ccf52845d910~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如：我们新建一个叫 my-snippets 的代码片段文件</p><figure><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e12d9742e48645abbc143bee4a5971c5~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>新建完之后会出现默认的示例，看起来是个类似 json 的配置文件。</p><figure><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ce55e390e4ff4948b83eef058f30392f~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来我们可以在开心的在新建的 <code>my-snippets.code-snippets</code> 文件中设置我们的代码片段了。 😀😀😀</p><h2 id="二、snippet-语法" tabindex="-1"><a class="header-anchor" href="#二、snippet-语法" aria-hidden="true">#</a> 二、Snippet 语法</h2><p>然而创建后的默认示例你可能会懵逼，这，都是些啥？ 😳 😳 😳</p><p>接下来就用这个默认示例讲解一下 VSCode 的 Snippet 语法。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Example:</span>
<span class="token string double-quoted-string">&quot;Print to console&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string double-quoted-string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;javascript,typescript&quot;</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;prefix&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;log&quot;</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;body&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string double-quoted-string">&quot;console.log(&#39;<span class="token interpolation"><span class="token variable">$1</span></span>&#39;);&quot;</span><span class="token punctuation">,</span>
        <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$2</span></span>&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;description&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Log output to console&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Example</code> 下面的 <code>Print to console</code> 对应代码片段名称（触发代码片段的时候会展示匹配到的代码片段名称）。</li><li><code>prefix</code> 对应触发代码片段的字符。</li><li><code>body</code> 对应代码片段内容，可以是字符串，也可以为数组，若为数组每个元素都做为单独的一行插入。<code>body</code> 的内容支持 js 的转义字符，如 <code>\\n\\r</code> 等，我个人不建议用 <code>\\n</code> ，可另起一行给数组多插入一项，不然一行太多的话不容易观察代码块的格式。</li><li><code>description</code> 对应代码片段描述。</li></ul><h3 id="_1-占位符" tabindex="-1"><a class="header-anchor" href="#_1-占位符" aria-hidden="true">#</a> 1.占位符 $</h3><p><code>log</code> 方法中 <code>$</code> 后面紧跟数字可指定代码片段触发落入编辑器之后的光标位置，光标位置按照从小到大排序。 <code>log</code> 方法中当你输入 <code>log + TAB</code> 之后光标会默认落到 <code>log()</code> 的括号中（<code>$1</code> 的位置），如果此时没有手动移动光标位置，再次按 <code>TAB</code> 则光标会落到 <code>console.log()</code> 的第二行（ <code>$2</code> 的位置），当然，你也可以设置 <code>$3、$4</code> ... 等等。</p><blockquote><p>需要注意的是：👇</p></blockquote><p><code>$0</code> 用于设置最终光标的位置，设置了 <code>$0</code> 之后，再往后设置其他占位符则不会生效， <code>$0</code> 终止了 <code>TAB键</code> 的光标跳转操作。</p><h3 id="_2-占位内容的可选项" tabindex="-1"><a class="header-anchor" href="#_2-占位内容的可选项" aria-hidden="true">#</a> 2.占位内容的可选项</h3><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token string">&quot;方法注释&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;prefix&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zs-Function&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;body&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot; * @description description...&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot; * @param { \${1|Boolean,Number,String,Object,Array,*|} } name description...&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot; * @return { \${2|Boolean,Number,String,Object,Array,*|} } description...&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot; */&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;$0&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;添加方法注释&quot;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面是一个简单的方法注释代码块，占位符默认不带可选项，如果要设置占位内容的可选项，写法为 <code>\${1|a,b,c}</code>，括号中的 <code>1</code> 对应的是按 <code>TAB</code> 之后的光标落点顺序， <code>abc</code> 为可选的项，用逗号隔开。所以上面的代码在输入 <code>zs + TAB</code> 后第一个光标会落在 <code>param name... {}</code> 的大括号中（<code>$1</code> 的位置），如下图可以看到设置的可选项。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b785edf7c7fc4424a17c2e307bd63357~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择了参数类型之后，再次按 <code>TAB</code> , 光标会自动落到返回参数类型处（<code>$2</code> 的位置）并弹出可选项。如下所示：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/06d157ea12cb4f50a81382f1c899a681~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择了第二个选项之后，再次按 <code>TAB</code> ,光标自动落到我们配置的 <code>$0</code> 处，也就是 <code>*/</code> 的下一行：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/955b0a49efa54691ba0599e934e6813b~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>需要注意的是：👇</p></blockquote><ul><li>如果可选择内容只有一个值的话可以写成 <code>\${1:default}</code> 的格式。</li><li>占位内容支持嵌套，比如 <code>\${1:another \${2:placeholder}}</code>。</li></ul><h3 id="_3-变量" tabindex="-1"><a class="header-anchor" href="#_3-变量" aria-hidden="true">#</a> 3.变量</h3><p>使用 <code>$name</code> 或者 <code>\${name:default}</code> 可以插入变量的值。如果未设置变量，则会插入其默认值或空字符串。当变量未知（未定义其名称）时，会将插入的变量名称转换为占位符。</p><blockquote><p><strong><em>VSCode 中可以使用以下变量：</em></strong></p></blockquote><p><strong><em>1）文档相关：</em></strong></p><table><thead><tr><th>变量</th><th>变量含义</th></tr></thead><tbody><tr><td><code>TM_SELECTED_TEXT</code></td><td>当前选定的文本或空字符串</td></tr><tr><td><code>TM_CURRENT_LINE</code></td><td>当前行的内容</td></tr><tr><td><code>TM_CURRENT_WORD</code></td><td>光标下的单词内容或空字符串</td></tr><tr><td><code>TM_LINE_INDEX</code></td><td>基于零索引的行号</td></tr><tr><td><code>TM_LINE_NUMBER</code></td><td>基于单索引的行号</td></tr><tr><td><code>TM_FILENAME</code></td><td>当前文档的文件名</td></tr><tr><td><code>TM_FILENAME_BASE</code></td><td>当前文档没有扩展名的文件名</td></tr><tr><td><code>TM_DIRECTORY</code></td><td>当前文档的目录</td></tr><tr><td><code>TM_FILEPATH</code></td><td>当前文档的完整文件路径</td></tr><tr><td><code>CLIPBOARD</code></td><td>剪贴板的内容</td></tr><tr><td><code>WORKSPACE_NAME</code></td><td>已打开的工作空间或文件夹的名称</td></tr></tbody></table><p><strong><em>2）当前日期和时间：</em></strong></p><table><thead><tr><th>变量</th><th>变量含义</th></tr></thead><tbody><tr><td><code>CURRENT_YEAR</code></td><td>当前年份</td></tr><tr><td><code>CURRENT_YEAR_SHORT</code></td><td>当前年份的最后两位数</td></tr><tr><td><code>CURRENT_MONTH</code></td><td>月份为两位数（例如&#39;02&#39;）</td></tr><tr><td><code>CURRENT_MONTH_NAME</code></td><td>月份的全名（例如&#39;June&#39;）（中文语言对应六月）</td></tr><tr><td><code>CURRENT_MONTH_NAME_SHORT</code></td><td>月份的简称（例如&#39;Jun&#39;）（中文语言对应是 6 月）</td></tr><tr><td><code>CURRENT_DATE</code></td><td>这个月的哪一天</td></tr><tr><td><code>CURRENT_DAY_NAME</code></td><td>当天是星期几（例如&#39;星期一&#39;）</td></tr><tr><td><code>CURRENT_DAY_NAME_SHORT</code></td><td>当天是星期几的简称（例如&#39;Mon&#39;）（中文对应周一）</td></tr><tr><td><code>CURRENT_HOUR</code></td><td>24 小时时钟格式的当前小时</td></tr><tr><td><code>CURRENT_MINUTE</code></td><td>当前分</td></tr><tr><td><code>CURRENT_SECOND</code></td><td>当前秒</td></tr></tbody></table><p><strong><em>3）要插入行或块注释，请遵循当前语言：</em></strong></p><table><thead><tr><th>变量</th><th>变量含义</th></tr></thead><tbody><tr><td><code>BLOCK_COMMENT_START</code></td><td>输出：PHP /*或 HTML 格式&lt;!--</td></tr><tr><td><code>BLOCK_COMMENT_END</code></td><td>输出：PHP */或 HTML 格式--&gt;</td></tr><tr><td><code>LINE_COMMENT</code></td><td>输出：PHP //或 HTML 格式</td></tr></tbody></table><p>举个栗子：</p><blockquote><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d253ba67a4b49dd92a171fb16f55f6c~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></blockquote><p>下面的代码块是常用的文件顶部添加作者和时间的块注释，其中用到了年（<code>CURRENT_YEAR</code>）月（<code>CURRENT_MONTH</code>）日（<code>$CURRENT_DATE</code>）的系统变量。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;作者和时间注释&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;prefix&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;zs-Author &amp; Time&quot;</span>,
    <span class="token string">&quot;body&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;/**&quot;</span>,
      <span class="token string">&quot; * Created by preference on <span class="token variable">$CURRENT_YEAR</span>/<span class="token variable">$CURRENT_MONTH</span>/<span class="token variable">$CURRENT_DATE</span>&quot;</span>,
      <span class="token string">&quot; */&quot;</span>,
      <span class="token string">&quot;<span class="token variable">$0</span>&quot;</span>
    <span class="token punctuation">]</span>,
    <span class="token string">&quot;description&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;添加作者和时间注释&quot;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再举个栗子：</p><blockquote><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bec04f95151e428caaa662cb5e9eefc8~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></blockquote><p>下面的代码块是新建 <code>.Vue</code> 文件的模板代码块，其中用到了当前文档没有扩展名的文件名（<code>TM_FILENAME_BASE</code>），默认把文件名填入 <code>name</code> 和 <code>class</code> 中。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code> <span class="token string-literal"><span class="token string">&quot;Vue模板&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    <span class="token string-literal"><span class="token string">&quot;prefix&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;vue-template&quot;</span></span><span class="token punctuation">,</span>
    <span class="token string-literal"><span class="token string">&quot;body&quot;</span></span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;template&gt;&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  &lt;section class=\\&quot;$TM_FILENAME_BASE\\&quot;&gt;&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;    $1&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  &lt;/section&gt;&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;/template&gt;\\n&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;script&gt;&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;export default {&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot; name: &#39;$TM_FILENAME_BASE&#39;,&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  data() {&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;    return {\\n&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;    }&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  },&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  components: {},&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  watch: {},&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  mounted() {},&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;  methods: {}&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;}&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;/script&gt;\\n&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;style scoped lang=\\&quot;less\\&quot;&gt;\\n&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;&lt;/style&gt;&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;$0&quot;</span></span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-literal"><span class="token string">&quot;description&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Vue模板&quot;</span></span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、开始使用" tabindex="-1"><a class="header-anchor" href="#三、开始使用" aria-hidden="true">#</a> 三、开始使用</h2>`,52),m={href:"https://99cc.vip/public/tools/vscode_snippet/index.html",target:"_blank",rel:"noopener noreferrer"},v=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"/*markdown中的Frontmatter配置代码片段*/"),s(`
	`),n("span",{class:"token property"},'"vuepress-frontmatter"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token property"},'"prefix"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"blog"'),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"body"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token string"},'"---"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"title: ${1:当前页面内容标题}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"shortTitle: $TM_FILENAME_BASE"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"icon: ${2|note,html,css,javascript,es6,java,vue,react,linux,nginx,mysql,http,vscode,typescript,strong,repo,git|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"author: zzzzzxm"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"isOriginal: ${3|true,false|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"sticky: ${4|false,true|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"star: ${5|false,true,任意number|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"category:"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"  - ${6|工作,生活,摸鱼|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"  - ${7|随笔,日常记录,技术方案,小技巧,小游戏|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"tag:"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"  - ${8|HTML,CSS,JS,JAVA,MYSQL,NGINX,VUE,REACT,WEBPACK,VITE,GIT,TS,VSCODE,工具|}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"---"'),s(`
		`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"博客Frontmatter配置"'),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[s("	"),n("span",{class:"token comment"},"/*markdown增强部分代码片段*/"),s(`
	`),n("span",{class:"token property"},'"vuepress markdown增强语法卡片代码片段"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token property"},'"prefix"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"```card"'),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"body"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token string"},'"```card"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"title: ${1:卡片标题}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"desc: ${2:卡片描述}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"logo: ${3:卡片LOGO}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"link: ${4:卡片链接地址}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"color: #096DD9"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"```"'),s(`
		`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"vuepress markdown增强语法card代码片段"'),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[s("	"),n("span",{class:"token comment"},"/*markdown增强部分自定义容器代码片段*/"),s(`
	`),n("span",{class:"token property"},'"vuepress markdown增强语法自定义容器代码片段"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token property"},'"prefix"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"```container"'),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"body"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token string"},'":::: ${1|info,note,tip,warning,danger,details|} ${2:容器标题}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"${3:容器内容}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"::::"'),s(`
		`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"vuepress markdown增强语法自定义容器代码片段"'),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[s("	"),n("span",{class:"token comment"},"/*markdown增强部分TABS代码片段*/"),s(`
	`),n("span",{class:"token property"},'"vuepress markdown增强语法TABS代码片段"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token property"},'"prefix"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"```tabs"'),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"body"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token string"},'"::: tabs"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"@tab ${1:选项卡1的标题}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"<!-- tab 1 内容 -->"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"@tab ${2:选项卡2的标题}"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'"<!-- tab 2 内容 -->"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'":::"'),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token string"},'""'),s(`
		`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"vuepress markdown增强语法TABS代码片段"'),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_={href:"https://code.visualstudio.com/docs/editor/userdefinedsnippets",title:"https://code.visualstudio.com/docs/editor/userdefinedsnippets",target:"_blank",rel:"noopener noreferrer"};function E(T,R){const c=p("ExternalLinkIcon"),l=p("Tabs");return d(),u("div",null,[b,n("p",null,[s("以写博客方便为例子，通过占位符和变量组合配合"),n("a",m,[s("VSCode 代码片段生成器"),i(c)]),s("生成我们的 Vuepress 常用代码片段")]),i(l,{id:"433",data:[{title:"Frontmatter 代码"},{title:"卡片代码"},{title:"自定义容器代码"},{title:"TABS 代码"}]},{tab0:t(({title:a,value:e,isActive:o})=>[v]),tab1:t(({title:a,value:e,isActive:o})=>[q]),tab2:t(({title:a,value:e,isActive:o})=>[f]),tab3:t(({title:a,value:e,isActive:o})=>[h]),_:1}),n("p",null,[s("参考文章："),n("a",_,[s("Creating your own snippets in Visual Studio Code"),i(c)])])])}const y=r(g,[["render",E],["__file","VSCODE代码片段.html.vue"]]);export{y as default};
